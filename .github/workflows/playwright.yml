name: SveltyCMS Tests and Build

# Trigger on pushes to main and next, and on Pull Requests to main and next
on:
  push:
    branches:
      - main
      - next
  pull_request:
    branches:
      - main
      - next
  workflow_dispatch: 
    inputs:
      test_type:
        description: 'Type of test to run'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - playwright
        - unit
        - integration

jobs:
  test:
    name: SveltyCMS Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        mongodb-version: [latest]
        test-file:
          [
            '/tests/playwright/signupfirstuser.spec.ts',
            '/tests/playwright/user.spec.ts',
            '/tests/playwright/oauth-signup-firstuser.spec.ts',
            '/tests/playwright/collection.spec.ts',
            '/tests/playwright/language.spec.ts',
            '/tests/playwright/login.spec.ts',
            '/tests/playwright/permission-change.spec.ts',
            '/tests/playwright/user-crud.spec.ts',
            '/tests/playwright/setup.spec.ts',
            '/tests/playwright/password-reset.spec.ts',
            '/tests/playwright/collection-builder.spec.ts',
            '/tests/playwright/media-gallery.spec.ts',
            '/tests/playwright/widgets-manager.spec.ts',
            '/tests/playwright/theme-manager.spec.ts',
            '/tests/playwright/navigation.spec.ts'
          ]

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache dependencies and Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/ms-playwright
          key: ${{ runner.OS }}-node-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-playwright-
        continue-on-error: true

      - name: Start MongoDB v${{ matrix.mongodb-version }}
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-username: admin
          mongodb-password: admin
          mongodb-db: SveltyCMS
          mongodb-port: 27017
        # CORRECTED: Removed the 'if' condition to ensure MongoDB runs for pull requests as well.

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Generate SvelteKit files
        run: npx svelte-kit sync

      - name: Run local server
        run: npm run build && npm run preview &

      - name: Wait for server to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:4173; do sleep 2; done'

      - name: Run Playwright tests
        run: |
          mkdir -p test-results/playwright
          # Run test files conditionally based on workflow input
          if [[ "${{ github.event.inputs.test_type }}" == "playwright" || "${{ github.event.inputs.test_type }}" == "all" || "${{ github.event.inputs.test_type }}" == "" ]]; then
            npx playwright test ${{ matrix.test-file }} --workers=1 --output-dir=test-results/playwright
          fi
        env:
          # --- CORRECTED: Private Configuration ---
          # Note: Prefixes like 'privateEnv.' are removed. All values are strings.
          # The application code is expected to parse numbers, booleans, and JSON strings.
          DB_TYPE: 'mongodb'
          DB_HOST: 'localhost' # CORRECTED: Use 'localhost', not the full connection string URI
          DB_PORT: '27017'
          DB_NAME: 'SveltyCMS'
          DB_USER: 'admin'
          DB_PASSWORD: 'admin'
          DB_RETRY_DELAY: '1000'
          DB_RETRY_ATTEMPTS: '3'
          DB_POOL_SIZE: '5'
          MULTI_TENANT: 'false'

          SMTP_HOST: ''
          SMTP_PORT: '587'
          SMTP_EMAIL: ''
          SMTP_PASSWORD: ''
          SERVER_PORT: '4173'

          # CORRECTED: Conditional validation for Google OAuth requires these if USE_GOOGLE_OAUTH is true.
          USE_GOOGLE_OAUTH: 'true'
          GOOGLE_CLIENT_ID: 'dummy-google-client-id-for-testing.apps.googleusercontent.com'
          GOOGLE_CLIENT_SECRET: 'GOCSPX-dummy-google-client-secret-for-ci'

          # CORRECTED: Set USE_REDIS to false, so other REDIS variables are not required.
          USE_REDIS: 'false'
          REDIS_HOST: ''
          REDIS_PORT: ''
          REDIS_PASSWORD: ''

          SESSION_CLEANUP_INTERVAL: '60000'
          MAX_IN_MEMORY_SESSIONS: '1000'
          DB_VALIDATION_PROBABILITY: '0.1'
          SESSION_EXPIRATION_SECONDS: '86400'

          USE_MAPBOX: 'false'
          MAPBOX_API_TOKEN: ''
          SECRET_MAPBOX_API_TOKEN: ''

          GOOGLE_API_KEY: ''
          TWITCH_TOKEN: ''
          USE_TIKTOK: 'false'
          TIKTOK_TOKEN: ''
          LLM_APIS: '{}'

          # CORRECTED: ROLES and PERMISSIONS must be non-empty JSON arrays.
          ROLES: '["admin", "editor"]'
          PERMISSIONS: '["create", "read", "update", "delete"]'

          # CORRECTED: JWT_SECRET_KEY must be at least 32 characters long.
          JWT_SECRET_KEY: 'a-super-secret-jwt-key-for-github-actions-that-is-long-enough'

          USE_2FA: 'false'
          TWO_FACTOR_AUTH_SECRET: ''
          TWO_FACTOR_AUTH_BACKUP_CODES_COUNT: '10'

          # --- CORRECTED: Public Configuration ---
          HOST_DEV: 'http://localhost:5173'
          HOST_PROD: 'http://localhost:4173'
          SITE_NAME: 'SveltyCMS Test Site'
          PASSWORD_LENGTH: '8'

          # CORRECTED: DEFAULT_CONTENT_LANGUAGE must be in AVAILABLE_CONTENT_LANGUAGES
          DEFAULT_CONTENT_LANGUAGE: 'en'
          AVAILABLE_CONTENT_LANGUAGES: '["en", "de", "es"]'
          # CORRECTED: Added missing required BASE_LOCALE and LOCALES
          BASE_LOCALE: 'en'
          LOCALES: '["en", "de"]'

          MEDIA_FOLDER: 'ci-media-files'
          # CORRECTED: Objects must be valid JSON strings.
          MEDIA_OUTPUT_FORMAT_QUALITY: '{"format": "webp", "quality": 75}'
          MEDIASERVER_URL: ''
          IMAGE_SIZES: '{"thumbnail": 150, "card": 600}'
          MAX_FILE_SIZE: '10485760'
          BODY_SIZE_LIMIT: '104857600'
          EXTRACT_DATA_PATH: ''
          USE_ARCHIVE_ON_DELETE: 'true'

          SEASONS: 'false'
          SEASON_REGION: '' # Not needed if SEASONS is false
          PKG_VERSION: 'ci-test-version'

          # CORRECTED: LOG_LEVELS must be a valid JSON array string.
          LOG_LEVELS: '["info", "error", "warn"]'
          LOG_RETENTION_DAYS: '7'
          LOG_ROTATION_SIZE: '5242880' # 5MB

          DEMO: 'true'

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results
          path: test-results/playwright/
          retention-days: 30

  unit-tests:
    name: SveltyCMS Unit Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_type == 'unit' || github.event.inputs.test_type == 'all' || github.event.inputs.test_type == ''

    strategy:
      matrix:
        test-category:
          - 'api'
          - 'auth' 
          - 'components'
          - 'widgets'
          - 'utils'

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: latest
          mongodb-username: admin
          mongodb-password: admin
          mongodb-db: SveltyCMS
          mongodb-port: 27017

      - name: Install dependencies
        run: npm ci

      - name: Generate SvelteKit files
        run: npx svelte-kit sync

      - name: Run Unit Tests
        run: |
          mkdir -p test-results/unit
          # Run tests based on category
          case "${{ matrix.test-category }}" in
            "api")
              npm run test:bun -- tests/bun/api/ --reporter json > test-results/unit/api-results.json
              ;;
            "auth")
              npm run test:bun -- tests/bun/auth/ --reporter json > test-results/unit/auth-results.json
              ;;
            "components")
              npm run test:bun -- tests/bun/*test.ts --reporter json > test-results/unit/components-results.json
              ;;
            "widgets")
              npm run test:bun -- tests/bun/widgets/ --reporter json > test-results/unit/widgets-results.json
              ;;
            "utils")
              npm run test:bun -- tests/bun/helpers/ tests/bun/mocks/ --reporter json > test-results/unit/utils-results.json
              ;;
          esac
        env: # CORRECTED: Added the full environment configuration to this job as well.
          # --- Private Configuration ---
          DB_TYPE: 'mongodb'
          DB_HOST: 'localhost'
          DB_PORT: '27017'
          DB_NAME: 'SveltyCMS'
          DB_USER: 'admin'
          DB_PASSWORD: 'admin'
          DB_RETRY_DELAY: '1000'
          DB_RETRY_ATTEMPTS: '3'
          DB_POOL_SIZE: '5'
          MULTI_TENANT: 'false'
          SMTP_HOST: ''
          SMTP_PORT: '587'
          SMTP_EMAIL: ''
          SMTP_PASSWORD: ''
          SERVER_PORT: '4173'
          USE_GOOGLE_OAUTH: 'true'
          GOOGLE_CLIENT_ID: 'dummy-google-client-id-for-testing.apps.googleusercontent.com'
          GOOGLE_CLIENT_SECRET: 'GOCSPX-dummy-google-client-secret-for-ci'
          USE_REDIS: 'false'
          REDIS_HOST: ''
          REDIS_PORT: ''
          REDIS_PASSWORD: ''
          SESSION_CLEANUP_INTERVAL: '60000'
          MAX_IN_MEMORY_SESSIONS: '1000'
          DB_VALIDATION_PROBABILITY: '0.1'
          SESSION_EXPIRATION_SECONDS: '86400'
          USE_MAPBOX: 'false'
          MAPBOX_API_TOKEN: ''
          SECRET_MAPBOX_API_TOKEN: ''
          GOOGLE_API_KEY: ''
          TWITCH_TOKEN: ''
          USE_TIKTOK: 'false'
          TIKTOK_TOKEN: ''
          LLM_APIS: '{}'
          ROLES: '["admin", "editor"]'
          PERMISSIONS: '["create", "read", "update", "delete"]'
          JWT_SECRET_KEY: 'a-super-secret-jwt-key-for-github-actions-that-is-long-enough'
          USE_2FA: 'false'
          TWO_FACTOR_AUTH_SECRET: ''
          TWO_FACTOR_AUTH_BACKUP_CODES_COUNT: '10'
          # --- Public Configuration ---
          HOST_DEV: 'http://localhost:5173'
          HOST_PROD: 'http://localhost:4173'
          SITE_NAME: 'SveltyCMS Test Site'
          PASSWORD_LENGTH: '8'
          DEFAULT_CONTENT_LANGUAGE: 'en'
          AVAILABLE_CONTENT_LANGUAGES: '["en", "de", "es"]'
          BASE_LOCALE: 'en'
          LOCALES: '["en", "de"]'
          MEDIA_FOLDER: 'ci-media-files'
          MEDIA_OUTPUT_FORMAT_QUALITY: '{"format": "webp", "quality": 75}'
          MEDIASERVER_URL: ''
          IMAGE_SIZES: '{"thumbnail": 150, "card": 600}'
          MAX_FILE_SIZE: '10485760'
          BODY_SIZE_LIMIT: '104857600'
          EXTRACT_DATA_PATH: ''
          USE_ARCHIVE_ON_DELETE: 'true'
          SEASONS: 'false'
          SEASON_REGION: ''
          PKG_VERSION: 'ci-test-version'
          LOG_LEVELS: '["info", "error", "warn"]'
          LOG_RETENTION_DAYS: '7'
          LOG_ROTATION_SIZE: '5242880'
          DEMO: 'true'

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results-${{ matrix.test-category }}
          path: test-results/unit/
          retention-days: 30

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: [test, unit-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next'

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Generate SvelteKit files
        run: npx svelte-kit sync

      - name: Build application
        run: npm run build

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check

      - name: Create npm package
        run: npm pack

      - name: Upload npm package artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm-package-${{ github.ref_name }}
          path: '*.tgz'
          retention-days: 30

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: sveltycms/sveltycms
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [build-and-publish]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next'

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate

      - name: Run security scan
        uses: securecodewarrior/github-action-add-sarif@v1
        if: always()
        with:
          sarif-file: 'security-scan-results.sarif'
